
services:
  # MongoDB Database
  mongo:
    image: mongo:7
    container_name: softscape-mongo-prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: softscape
    volumes:
      - mongo-prod-data:/data/db
    networks:
      - softscape-prod-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: softscape-redis-prod
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-prod-data:/data
    networks:
      - softscape-prod-network

  # API Backend
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
      target: production
    container_name: softscape-api-prod
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGO_URI=${MONGO_URI}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
    volumes:
      - ./apps/api/uploads:/app/uploads
      - ./apps/api/logs:/app/logs
    depends_on:
      - mongo
      - redis
    networks:
      - softscape-prod-network
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Web Frontend
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
      target: production
    container_name: softscape-web-prod
    restart: always
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - api
    networks:
      - softscape-prod-network

  # Admin Dashboard
  admin:
    build:
      context: ./apps/admin
      dockerfile: Dockerfile
      target: production
    container_name: softscape-admin-prod
    restart: always
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - api
    networks:
      - softscape-prod-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: softscape-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - web
      - admin
    networks:
      - softscape-prod-network

volumes:
  mongo-prod-data:
  redis-prod-data:

networks:
  softscape-prod-network:
    driver: bridge

